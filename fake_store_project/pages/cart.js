import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import Item from "./products/[id]";

export default function Cart() {
  let [cart, setCart] = useState([]);
  const [totalPrice, setTotalPrice] = useState(0);

  let localCart;
  if (typeof window !== "undefined") {
    localCart = localStorage.getItem("cart");
  }

  //this is called on component mount
  useEffect(() => {
    //turn it into js
    localCart = JSON.parse(localCart);
    //load persisted cart into state if it exists
    if (localCart) setCart(localCart);
  }, []); //the empty array ensures useEffect only runs once

  useEffect(() => {
    let tempTotalPrice = 0;
    for (let index = 0; index < cart.length; index++) {
      // console.log(cart[index].price);
      tempTotalPrice =
        tempTotalPrice + cart[index].price * cart[index].quantity;
    }
    setTotalPrice(tempTotalPrice);
  }, [cart]);

  const makeChangesInLocalStorage = (newCart) => {
    let stringCart = JSON.stringify(newCart);
    localStorage.setItem("cart", stringCart);
  };

  const clearAll = () => {
    let cartCopy = [];
    setCart(cartCopy);
    makeChangesInLocalStorage(cartCopy);
  };

  const removeItem = (item) => {
    let cartCopy = [...cart];
    let objIndex = cart.findIndex((e) => e.title === item.title);
    // setCart(cart.filter((e) => e.title !== item.title));
    cartCopy.splice(objIndex, 1);
    setCart(cartCopy);
    makeChangesInLocalStorage(cartCopy);
  };

  const removeOneItem = (item) => {
    let cartCopy = [...cart];
    let objIndex = cart.findIndex((e) => e.title === item.title);
    cartCopy[objIndex].quantity--;
    if (cartCopy[objIndex].quantity <= 0) {
      removeItem(item);
    } else {
      setCart(cartCopy);
      makeChangesInLocalStorage(cartCopy);
    }
  };

  const addOneMoreItem = (item) => {
    let cartCopy = [...cart];
    let objIndex = cart.findIndex((e) => e.title === item.title);
    cartCopy[objIndex].quantity++;
    setCart(cartCopy);
    makeChangesInLocalStorage(cartCopy);
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="m-8 p-4 max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl">
        <h1>Shoppingcart!</h1>
        <div>
          {cart.map((item) => (
            <div key={item.id} className="flex flex-row">
              <div className="p-8 md:flex-shrink-0">
                <Image
                  width={170}
                  height={210}
                  src={item.image}
                  alt={item.image}
                />
              </div>
              <div className="mt-4 ">
                <h4>{item.title}</h4>
                <h4>Price: ${item.price.toFixed(2)}</h4>
                <div className="flex justify-end space-x-4   bg-gray-200">
                  <button
                    className="py-2 px-4 bg-gray-500 text-white font-semibold rounded-lg shadow-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75"
                    onClick={() => removeOneItem(item)}
                  >
                    -
                  </button>
                  <h6>{item.quantity}</h6>
                  <button
                    className="py-2 px-4 bg-gray-500 text-white font-semibold rounded-lg shadow-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75"
                    onClick={() => addOneMoreItem(item)}
                  >
                    +
                  </button>
                </div>
                <button
                  className="py-2 px-4 bg-red-400 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75"
                  onClick={() => removeItem(item)}
                >
                  Remove from cart
                </button>
              </div>
            </div>

            /*  <div key={item}>
          <h2>{item.title}</h2>
        </div> */
          ))}
          <div className=" flex flex-col ">
            <h2>Total price: ${totalPrice.toFixed(2)}</h2>
            <button
              className="py-2 px-4 bg-green-500 text-white font-semibold rounded-lg shadow-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75"
              onClick={() => clearAll()}
            >
              Checkout
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}
